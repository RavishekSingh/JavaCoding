1) Explain Layared Architecture in Business application?


- Layared Architecture in Business application we devide into 3 logical partition:

 1.Presentation Layer(UI layer)
--it is set of java classes, which are responsible for generating user input screen and response page(output screen) is knwon as PL.

--this layer provides the intraction with the end-user.


2.Business Logic Layer (Service layer)
--programatical implementation of business rule of a business organization is nothing but business logic .
--a collection of java classes whose methods have business logic to process the data according to the business rule is known as SL/BLL.


3.Data Access Layer

--a set of java classes whose methods r exclusivly meant for performing CRUD operation with the DB server is known as DAL.
using JDBC and DAO pattern

**Note:- to communicate among these layers loose coupling should be promoted.



2)limitation of JDBC based persistence logic over JPA?


-1.jdbc can't store the java objs into the table directly,becoz sql queires does not allows the java objs as input, here we need to convert
  obj data into the simple(atmoic) value to store them in a DB.
  
2.jdbc code is the DB dependent code becoz it uses  DB s/w dependent queries. so our jdbc based persistence logic is not 100% portable across
 various DB s/w.

3.jdbc code having boiler plate code problem (writing the same code except sql queries in multiple classes of our application again and again)..

4.jdbc code throws lots of checked exceptions, programmer need to handle them.

5.After the select operation, we get the ResultSet object.this RS obj we can not transfer from one layer to another layer and to get the data
 from the ResultSet we need to now the structure of the ResultSet.

6.there is no any caching and transaction management support is available in jdbc.

etc ...



3)